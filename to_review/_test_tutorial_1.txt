Entering the problem
===============================================================================

>>> from dmak.data import supertree_bid
>>> nodes = supertree_bid()
>>> nodes
0  D bid             500.00 compbid   
                     700.00 compbid   
1  C compbid   .350  400.00 cost      
               .500  600.00 cost      
               .150  800.00 cost      
2  C cost      .250  200.00 profit    
               .500  400.00 profit    
               .250  600.00 profit    
3  T profit    


>>> from dmak.decisiontree import DecisionTree
>>> tree = DecisionTree(
...     variables=nodes,
...     initial_variable="bid"
... )
>>> tree
STRUCTURE    NAMES    OUTCOMES     OUTCOMES        
<BLANKLINE>
0D1 14       bid      500 700                      
1C2 6 10     compbid  400 600 800  .350 .500 .150  
2C3 4 5      cost     200 400 600  .250 .500 .250  
3T           profit                                
4T           profit                                
5T           profit                                
6C7 8 9      cost     200 400 600  .250 .500 .250  
7T           profit                                
8T           profit                                
9T           profit                                
10C11 12 13  cost     200 400 600  .250 .500 .250  
11T          profit                                
12T          profit                                
13T          profit                                
14C15 19 23  compbid  400 600 800  .350 .500 .150  
15C16 17 18  cost     200 400 600  .250 .500 .250  
16T          profit                                
17T          profit                                
18T          profit                                
19C20 21 22  cost     200 400 600  .250 .500 .250  
20T          profit                                
21T          profit                                
22T          profit                                
23C24 25 26  cost     200 400 600  .250 .500 .250  
24T          profit                                
25T          profit                                
26T          profit                                



# >> tree.display()


>>> tree.evaluate()

#Â >> tree.display()


>>> tree.rollback()
65.0

>>> tree.display()



